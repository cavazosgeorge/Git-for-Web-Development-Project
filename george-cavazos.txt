finished codepen url: https://codepen.io/jaxcodes11/pen/NWpXJgy?editors=1100

<!-- Questions to Submit in today's file first-lastname.txt --> 
<!--
Copy the questions below into the first-lastname.txt file on your github repo - answer each question and then push your changes. 

    1. What is Semantic HTML? -- Semantic HTML is the use of HTML markup to reinforce the semantics, or meaning of the information in webpages and web applications
    2. What is HTML used for? -- HTML is the code that is used to structure a web page and its content.
    3. What is an attribute and where do we put it? -- HTML attributes are a modifier of an HTML element type.  An attribute either modifies the default functionality of an element type or provides functionality to certain element types
    4. What is the h1 tag used for? How many times should I use it on a page? -- H1 tag is used for identifying the most important heading on the webpage. You should only use it once per page
    5. Name two tags that have required attributes -- <input> <select> 
    6. What do we put in the head of our HTML document? -- The head container typically contains metadata and defines the documents title
    7. What is an id? -- A unique ID for an HTML element 
    8. What elements can I add an id to? -- Normal elements 
    9. How many times can I use the same id on a page? -- Once 
    10. What is a class? -- The class is an attribute which specifies one or more class names for an HTML element.
    11. What elements can I add a class to? -- Any 
    12. How many times can I use the same class on a page? -- Multiple 
    13. How do I get my link to open in a new tab? -- The target attribute set to _blank , which tells the browser to open the link in a new tab/window
    14. What is the alt attribute in the image tag used for? -- In case somebody can't see the image the alt tag has the name of the image 
    15. How do I reference an id? -- Write a # character followed by an id name 
    16. What is the difference between a section and a div -- In HTML, <section> means that the content inside is grouped and should appear as a entry in an outline of a page whereas <div> does not convey any meaning, aside from any found in its class, lang and title attributes
    17. What is CSS used for? -- For styling webpages
    18. How do we select an element? Example - every h2 on the page -- The selector 
    19. What is the difference between a class and an id? - Give me an example of when I might use each one -- The difference between an ID and a class is that an ID can be used to identify one element, whereas a class can be used to identify more than one. 
    20. How do we select classes in CSS? -- .characters
    21. How do we select a p element with a single class of “human””? -- If I were to select the p element with an element selector that would style both the paragraphs - the one inside the div with a class of box as well as the one outside. To only style the p inside .box I use a descendant selector.
    22. What is a parent child selector? When would this be useful? -- The ("parent > child") selector selects all elements that are a direct child of the specified element.
    23. How do you select all links within a div with the class of sidebar? -- Descendant selectors
    24. What is a pseudo selector? -- is a keyword added to a selector that specifies a special state of the selected element(s).
    25. What do we use the change the spacing between lines? --  just use the line-height CSS property 
    26. What do we use to change the spacing between letters? -- <div style="word-spacing: 1em;">
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize? -- Capitalize
    28. How do I add a 1px border around my div that is dotted and black? -- border: 10px dotted #000000;
    29. How do I select everything on the page? -- CTRL+A 
    30. How do I write a comment in CSS? -- /**/
    31. How do I find out what file I am in, when I am using the command line? -- pwd (print working directory) 
    32. Using the command line - how do I see a list of files/folders in my current folder? -- The ls command 
    33. How do I remove a file via the command line? Why do I have to be careful with this? -- -rm file name (because you can make catastrophic changes to your code)
    34. Why should I use version control? -- To keep the original version of your code un-altered and organize edits to your code 
    35. How often should I commit to github? -- After every change to your branch
    36. What is the command we would use to push our repo up to github? -- $ git push -u origin george-cavazos
    37. Walk me through Lambda's git flow. -- 1: Create own repo (fork) 2: Clone your repo 3: Inside CLI cd into directory where repo should be saved 4: Use CLI to git clone repo 5: cd into newly created repo 6: Create new branch using your name 7: add changes to be committed 8: Commit -m with message of changes 9: Push changes into github repo 10: Go to your github and click branch master 11: Create your pull request 12: 

Stretch Questions

    1. What is the difference between an inline element and a block element? By default, inline elements do not force a new line to begin in the document flow. Block elements, on the other hand, typically cause a line break to occur (although, as usual, this can be changed using CSS).
    2. What happens when an element is positioned absolutely? An absolutely positioned element no longer exists in the normal document layout flow. Instead, it sits on its own layer separate from everything else.
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? Use the box model and use block-level elements 
    4. Name 3 elements that are display block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default: button, textarea, input
    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? The CSS box model is the set of rules that decides how a CSS element's sizes are computed as you add padding, borders, and margins around the content.



   --> 